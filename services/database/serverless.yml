service: sls-apig-domain-database

provider:
  name: aws
  runtime: nodejs8.10
  stage: ${opt:stage, env:SLS_STAGE, 'dev'}
  region: ${opt:region, env:SLS_REGION, 'us-east-1'}
  stackName: ${self:provider.stage}-${self:service}
  disableRollback: true
  apiName: ${self:provider.stackName}
  profile: ${opt:aws-profile, env:AWS_PROFILE, env:AWS_DEFAULT_PROFILE, 'default'}
  memorySize: 128
  timeout: 10
  logRetentionInDays: 14
  deploymentBucket:
    name: ${self:provider.region}-${self:service}-deploys
    serverSideEncryption: AES256

custom:
  tableName: ${self:provider.stage}-${self:service}-resources
  tableThroughputs:
    prod: 2
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:provider.stage}, self:custom.tableThroughputs.default}

resources:
  Resources:
    ResourcesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.tableName}
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: resourceId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: resourceId
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: ${self:custom.tableThroughput}
          WriteCapacityUnits: ${self:custom.tableThroughput}

  Outputs:
    ResourcesTableArn:
      Value: '#{ResourcesTable.Arn}'
      Export:
        Name: ${self:provider.stage}-ResourcesTableArn

plugins:
  # https://github.com/MikeSouza/serverless-deployment-bucket
  - serverless-deployment-bucket
  # https://github.com/sdd/serverless-dynalite
  - serverless-dynalite
  # https://github.com/dherault/serverless-offline
  - serverless-offline
  # https://github.com/dougmoscrop/serverless-plugin-common-excludes
  - serverless-plugin-common-excludes
  # https://github.com/svdgraaf/serverless-pseudo-parameters
  - serverless-pseudo-parameters
